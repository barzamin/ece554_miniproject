MATMUL	
SENDC 	Ra, CHI, CROW		(write to matmul C value, CHI for high bits of row CROW specifies, Ra <= Ra + 8)
WRITEC	Ra, CHI, CROW		(write to cache value of C, CHI for high bits of row CROW specifies row, Ra <= Ra + 8)
SENDA	Ra, AROW		(write to matmul memA the value in Ra to row specified by literal, Ra <= Ra + 8)
SENDB	Ra			(write to matmul module memB value in Ra, Ra <= Ra + 8)
JNZDEC	Ra PCOFFSET 		(branch to PCOFFSET literal if Ra is not equal to Zero then if Ra is not equal to zero Ra <= Ra - 1)
SHADD	R0, Ra, Rb, SHIFT	(R0 <= Ra + Rb<SHIFT)
LSHIFT	R0, Ra, Rb		(R0 <= Rb<Rshift)
SUBI	Ra, Rb, IMM		(Ra <= Rb - IMM)
ADD	R0, Ra, Rb		(R0 <= Ra + Rb)
XOR	R0, Ra, Rb		(R0 <= Ra ^ Rb)
BGT	R0, Ra, Rb		(if Ra > Rb PC <= R0)
BEQ	R0, Ra, Rb		(if Ra == Rb PC <= R0)
LD	R0, Ra			(Ra <= MEM(IMM))
ST	R0, Ra			(MEM(Ra) <= R0)
HALT				

r0-r10	general purpose registers
zero 	register holds a literal value of zero
h0-h3	host written registers (h0 contains width, h1 contains mem location of C,
				h2 contains mem location of B, h3 contains mem location A)

