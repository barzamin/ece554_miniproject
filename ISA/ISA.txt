MATMUL				(initiate matrix multiplication)
SENDC 	Ra, CLO, CROW		(write to matmul C value, CLO high when writing low bits, CROW specifies, Ra <= Ra + 8)
WRITEC	Ra, CLO, CROW		(write to cache value of C, CLO high when writing low bits, CROW specifies row, Ra <= Ra + 8)
SENDA	Ra, AROW		(write to matmul memA the value in Ra to row specified by literal, Ra <= Ra + 8)
SENDB	Ra			(write to matmul module memB value in Ra, Ra <= Ra + 8)
JNZDEC	Ra, R0	 		(PC <= PC + R0 if Ra is not equal to Zero then if Ra is not equal to zero Ra <= Ra - 1)
SHADD	Ra, Rb, SHIFT	        (Ra <= Ra + Rb < SHIFT)
LSHIFT	R0, Ra, Rb		(R0 <= Rb < Rb)
SUBI	Ra, Rb, IMM		(Ra <= Rb - IMM)
ADD	R0, Ra, Rb		(R0 <= Ra + Rb)
XOR	R0, Ra, Rb		(R0 <= Ra ^ Rb)
BGT	Ra, Rb, R0		(if Ra > Rb PC <= PC + R0)
BEQ	Ra, Rb, R0		(if Ra == Rb PC <= PC + R0)
LD	R0, Ra			(Ra <= MEM(IMM))
ST	R0, Ra			(MEM(Ra) <= R0)
HALT				

r0-r10	general purpose registers
zero 	register holds a literal value of zero
h0-h3	host written registers (h0 contains width, h1 contains mem location of C,
				h2 contains mem location of B, h3 contains mem location A)
